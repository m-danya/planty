on:
  push:
name: pytest, ruff, mypy, frontend
jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      #----------------------------------------------
      #  -----  Set up .env  -----
      #----------------------------------------------
      - name: Set up .env
        run: |
          cp .env.sample .env
          cp .env.dev.sample .env.dev
          echo "PLANTY_AUTH_SECRET=TEST_SECRET" >> .env.dev
      #----------------------------------------------
      #  -----  install uv  -----
      #----------------------------------------------
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.13"
      #----------------------------------------------
      # install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: uv sync --all-extras --dev
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run ruff
        run: |
          uv run ruff format --check
          uv run ruff check
      - name: Run pytest
        run: |
          uv run pytest --cov
      - name: Run mypy
        run: |
          uv run mypy planty

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint

      - name: Check TypeScript compilation
        working-directory: frontend
        run: npm run build
